#!/usr/bin/perl -w

use strict;
use warnings;

use Getopt::Long;

my $dry_run = 0;
my $verbose = 0;
my $nop;

my $getopt = GetOptions(
	'dry-run' => \$dry_run,
	'verbose' => \$verbose,
	'p' => \$nop,
);

if (!$getopt) {
	&usage;
}

my $rpm_pkg = $ARGV[0];

if (!$rpm_pkg) {
	&usage("You must specify an rpm pacakge");
}

my $rpm_cmd;
my $rpm = {};

#
# make sure that the target is an RPM
#

open RPM, "rpm -q $rpm_pkg|";
my $file_out = <RPM>;
close RPM;

if ($file_out =~ /is not installed/i) {
	print "The $rpm_pkg package is not installed\n";
	exit 1;
}

#
# collect the meta info in this package
#

$rpm_cmd = 'rpm -q --qf=\'%{name}\n%{version}\n%{release}\n%{arch}\n%{packager}\n%{summary}\n%{group}\n%{distribution}\n%{license}\n%{vendor}\n%{description}\n\'';

&vprint("Running: $rpm_cmd $rpm_pkg");

open RPM, "$rpm_cmd $rpm_pkg|";

chomp($rpm->{name} = <RPM>);
chomp($rpm->{version} = <RPM>);
chomp($rpm->{release} = <RPM>);
chomp($rpm->{arch} = <RPM>);
chomp($rpm->{packager} = <RPM>);
chomp($rpm->{summary} = <RPM>);
chomp($rpm->{group} = <RPM>);
chomp($rpm->{distribution} = <RPM>);
chomp($rpm->{license} = <RPM>);
chomp($rpm->{vendor} = <RPM>);

# description is whatever is left
my @description = <RPM>;

$rpm->{description} = join "", @description;

close RPM;

#
# collect the scripts in this package
#

# TODO: apparently rpm query tags include postin, prein, postun, and preun; but for now this works just fine

$rpm_cmd = 'rpm -q --scripts';

&vprint("Running: $rpm_cmd $rpm_pkg");

open RPM, "$rpm_cmd $rpm_pkg|";
my @scripts = <RPM>;
close RPM;

my $current_script_name = "";
my $current_script = "";

foreach my $line (@scripts) {

	# we've reached a new script
	if ($line =~ m|^([a-zA-Z0-9]+) scriptlet( \(using \/bin\/sh\))?:|) {

		# save the old one, if there was one
		$rpm->{$current_script_name} = $current_script if $current_script_name;

		# start the new one
		$current_script_name = $1;
		$current_script = "";

		next;
	}

	$current_script .= $line;

}

$rpm->{$current_script_name} = $current_script if $current_script_name;

#
# TODO: collect provides/dependancies for this package
#

#
# get the changelog
#

$rpm_cmd = 'rpm -q --changelog';

&vprint("Running: $rpm_cmd $rpm_pkg");

open RPM, "$rpm_cmd $rpm_pkg|";
my @changelog = <RPM>;
close RPM;

$rpm->{changelog} = join "", @changelog;

my $rpm_spec = qq~# generated by rpm-repack

Name: $rpm->{name}
Version: $rpm->{version}
Release: $rpm->{release}
Summary: $rpm->{summary}
License: $rpm->{license}
Distribution: $rpm->{distribution}
Group: $rpm->{group}
Packager: $rpm->{packager}
Provides: $rpm->{name}
BuildRoot: %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)
BuildArch: $rpm->{arch}
Source0: %{name}-%{version}.$rpm->{arch}.bin.tar.gz
NoSource: 0

%description
$rpm->{description}


%install
mkdir -p \$RPM_BUILD_ROOT
tar -ztf \$RPM_SOURCE_DIR/%{name}-%{version}.$rpm->{arch}.bin.tar.gz | sort -u | awk '{print "/" \$1}' > %{name}-%{version}.list
tar -C \$RPM_BUILD_ROOT -zxf \$RPM_SOURCE_DIR/%{name}-%{version}.$rpm->{arch}.bin.tar.gz

%files -f %{name}-%{version}.list

~;

#
# add scripts to the spec file as needed
#

if ($rpm->{preinstall}) {
	$rpm_spec .= qq~
%pre
$rpm->{preinstall}

~;
}

if ($rpm->{postinstall}) {
	$rpm_spec .= qq~
%post
$rpm->{postinstall}

~;
}

if ($rpm->{preuninstall}) {
	$rpm_spec .= qq~
%preun
$rpm->{preuninstall}

~;
}

if ($rpm->{postuninstall}) {
	$rpm_spec .= qq~
%postun
$rpm->{postuninstall}

~;
}

if ("(none)" ne $rpm->{changelog}) {
	$rpm_spec .= qq~

%changelog
$rpm->{changelog}
~;
}

#
# build the new RPM
#

if ($dry_run) {

	# dry run, just print out the spec file
	print $rpm_spec;

} else {

	chomp(my $srcdir = `rpm --eval '%{_sourcedir}'`);
	chomp(my $specdir = `rpm --eval '%{_specdir}'`);

	if (!$srcdir or ! -w $srcdir) {
		print "%{_sourcedir}: doesn't exist, or can't write to it\n";
		exit 1;
	}

	if (!$specdir or ! -w $specdir) {
		print "%{_specdir}: doesn't exist, or can't write to it\n";
		exit 1;
	}

	&vprint("Unpacking $rpm_pkg");

	`rpm -ql $rpm_pkg | tar -czpf $srcdir/$rpm->{name}-$rpm->{version}.$rpm->{arch}.bin.tar.gz -T - 2> /dev/null`;

	open SPEC, ">$specdir/repack-$rpm->{name}.spec";
	print SPEC $rpm_spec;
	close SPEC;

	&vprint("Running: rpmbuild -ba $specdir/$rpm->{name}.spec");

	system ("rpmbuild -ba $specdir/repack-$rpm->{name}.spec");

}

sub usage {
	my ($msg) = @_;
	if ($msg) { print $msg, "\n"; }
	print "Usage: $0 pkg_name\n";
	exit 1;
}

sub vprint {
	print join("", @_), "\n" if $verbose;
}

